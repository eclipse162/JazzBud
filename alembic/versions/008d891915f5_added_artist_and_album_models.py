"""Added Artist and Album models

Revision ID: 008d891915f5
Revises: aa35b403592a
Create Date: 2024-10-04 23:07:53.886793

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '008d891915f5'
down_revision: Union[str, None] = 'aa35b403592a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    inspector = sa.inspect(bind)

    if 'artists' not in inspector.get_table_names():
        op.create_table('artists',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column('artist_id', sa.String(length=255), nullable=True),
            sa.Column('name', sa.String(length=100), nullable=False),
            sa.Column('slug', sa.String(length=255), nullable=False),
            sa.PrimaryKeyConstraint('id'),
            sa.UniqueConstraint('slug')
        )
    
    if 'albums' not in inspector.get_table_names():
        op.create_table('albums',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column('album_id', sa.String(length=255), nullable=True),
            sa.Column('name', sa.String(length=255), nullable=False),
            sa.Column('slug', sa.String(length=255), nullable=False),
            sa.Column('artist_id', sa.String(length=100), nullable=False),
            sa.Column('cover', sa.String(length=255), nullable=True),
            sa.ForeignKeyConstraint(['artist_id'], ['artists.artist_id']),
            sa.PrimaryKeyConstraint('id'),
            sa.UniqueConstraint('slug')
        )
    
    # Ensure these columns exist before dropping them
    if 'songs' in inspector.get_table_names():
        if 'artist' in [col['name'] for col in inspector.get_columns('songs')]:
            op.drop_column('songs', 'artist')
        if 'album' in [col['name'] for col in inspector.get_columns('songs')]:
            op.drop_column('songs', 'album')
        if 'artist_id' in [col['name'] for col in inspector.get_columns('songs')]:
            op.drop_column('songs', 'artist_id')
        if 'album_id' in [col['name'] for col in inspector.get_columns('songs')]:
            op.drop_column('songs', 'album_id')
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('songs', sa.Column('album_id', sa.VARCHAR(length=255), nullable=True))
    op.add_column('songs', sa.Column('artist_id', sa.VARCHAR(length=255), nullable=True))
    op.add_column('songs', sa.Column('artist_slug', sa.VARCHAR(length=255), nullable=False))
    op.add_column('songs', sa.Column('album_slug', sa.VARCHAR(length=255), nullable=False))
    op.add_column('songs', sa.Column('album', sa.VARCHAR(length=100), nullable=True))
    op.add_column('songs', sa.Column('artist', sa.VARCHAR(length=100), nullable=True))
    op.drop_table('albums')
    op.drop_table('artists')
    # ### end Alembic commands ###
